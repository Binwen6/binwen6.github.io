---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get all blog posts for search
const posts = await getCollection('blog');
const searchData = posts.map(post => ({
  title: post.data.title,
  description: post.data.description,
  url: `/blog/${post.slug}`,
  date: post.data.pubDate,
  tags: post.data.tags
}));
---

<Layout title="Search - Binwen Liu" description="Search through blog posts and content.">
    <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-12">Search</h1>
    
    <div class="w-full max-w-2xl mx-auto">
        <div class="relative mb-8">
            <input 
                type="text" 
                id="search-input"
                placeholder="Search posts..." 
                class="w-full px-4 py-3 pl-10 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500 dark:focus:ring-purple-400 focus:border-transparent"
            >
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <i class="fa-solid fa-search text-gray-400"></i>
            </div>
        </div>
        
        <div id="search-results" class="space-y-4">
            <!-- Search results will be populated by JavaScript -->
        </div>
        
        <div id="no-results" class="hidden text-center text-gray-500 dark:text-gray-400 py-8">
            No results found. Try a different search term.
        </div>
    </div>
</Layout>

<script define:vars={{ searchData }}>
    const searchInput = document.getElementById('search-input');
    const searchResults = document.getElementById('search-results');
    const noResults = document.getElementById('no-results');
    
    function performSearch(query) {
        if (!query.trim()) {
            searchResults.innerHTML = '';
            noResults.classList.add('hidden');
            return;
        }
        
        const results = searchData.filter(item => 
            item.title.toLowerCase().includes(query.toLowerCase()) ||
            item.description.toLowerCase().includes(query.toLowerCase()) ||
            item.tags.some(tag => tag.toLowerCase().includes(query.toLowerCase()))
        );
        
        if (results.length === 0) {
            searchResults.innerHTML = '';
            noResults.classList.remove('hidden');
        } else {
            noResults.classList.add('hidden');
            searchResults.innerHTML = results.map(item => `
                <a href="${item.url}" class="block group">
                    <div class="p-4 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 group-hover:border-purple-500 dark:group-hover:border-purple-400 transition-all duration-300">
                        <h3 class="text-lg font-semibold group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors">
                            ${item.title}
                        </h3>
                        <p class="text-sm text-gray-600 dark:text-gray-300 mt-1">
                            ${item.description}
                        </p>
                        <div class="flex items-center gap-2 mt-2">
                            <span class="text-xs text-gray-500 dark:text-gray-400">
                                ${new Date(item.date).toLocaleDateString()}
                            </span>
                            ${item.tags.map(tag => `
                                <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded">
                                    ${tag}
                                </span>
                            `).join('')}
                        </div>
                    </div>
                </a>
            `).join('');
        }
    }
    
    searchInput.addEventListener('input', (e) => {
        performSearch(e.target.value);
    });
    
    // Focus search input on page load
    searchInput.focus();
</script> 